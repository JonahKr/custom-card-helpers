{"version":3,"file":"index.js","sources":["../src/datetime/duration_to_seconds.ts","../src/datetime/format_date.ts","../src/datetime/format_date_time.ts","../src/datetime/format_time.ts","../src/datetime/relative_time.ts","../src/datetime/seconds_to_duration.ts","../src/compute-domain.ts","../src/compute-rtl.ts","../src/compute-state-domain.ts","../src/const.ts","../src/fire-event.ts","../src/domain_icons.ts","../src/haptic.ts","../src/navigate.ts","../src/turn-on-off-entity.ts","../src/toggle-entity.ts","../node_modules/lit-html/lib/directive.js","../node_modules/lit-html/lib/template.js","../node_modules/lit-html/lib/parts.js","../node_modules/lit-html/lit-html.js","../src/long-press-directive.ts","../src/datetime/timer_time_remaining.ts","../src/apply_themes_on_element.ts","../src/compute-entity.ts","../src/compute-state-display.ts","../src/create-thing.ts","../src/handle-click.ts","../src/has-changed.ts","../src/turn-on-off-entities.ts"],"sourcesContent":["export function durationToSeconds(duration: string): number {\n  const parts = duration.split(\":\").map(Number);\n  return parts[0] * 3600 + parts[1] * 60 + parts[2];\n}\n","import fecha from \"fecha\";\n\n// Check for support of native locale string options\nfunction toLocaleDateStringSupportsOptions() {\n  try {\n    new Date().toLocaleDateString(\"i\");\n  } catch (e) {\n    return e.name === \"RangeError\";\n  }\n  return false;\n}\n\nexport const formatDate = (toLocaleDateStringSupportsOptions()\n  ? (dateObj: Date, locales: string) =>\n      dateObj.toLocaleDateString(locales, {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      })\n  : (dateObj: Date) => fecha.format(dateObj, \"mediumDate\"));\n","import fecha from \"fecha\";\n\n// Check for support of native locale string options\nfunction toLocaleStringSupportsOptions() {\n  try {\n    new Date().toLocaleString(\"i\");\n  } catch (e) {\n    return e.name === \"RangeError\";\n  }\n  return false;\n}\n\nexport const formatDateTime = (toLocaleStringSupportsOptions()\n  ? (dateObj: Date, locales: string) =>\n      dateObj.toLocaleString(locales, {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"2-digit\",\n      })\n  : (dateObj: Date) => fecha.format(dateObj, \"haDateTime\"));\n","import fecha from \"fecha\";\n\n// Check for support of native locale string options\nfunction toLocaleTimeStringSupportsOptions() {\n  try {\n    new Date().toLocaleTimeString(\"i\");\n  } catch (e) {\n    return e.name === \"RangeError\";\n  }\n  return false;\n}\n\nexport const formatTime = (toLocaleTimeStringSupportsOptions()\n  ? (dateObj: Date, locales: string) =>\n      dateObj.toLocaleTimeString(locales, {\n        hour: \"numeric\",\n        minute: \"2-digit\",\n      })\n  : (dateObj: Date) => fecha.format(dateObj, \"shortTime\"));\n","import { LocalizeFunc } from \"../translations/localize\";\n\n/**\n * Calculate a string representing a date object as relative time from now.\n *\n * Example output: 5 minutes ago, in 3 days.\n */\nconst tests = [60, 60, 24, 7];\nconst langKey = [\"second\", \"minute\", \"hour\", \"day\"];\n\nexport function relativeTime(\n  dateObj: Date,\n  localize: LocalizeFunc,\n  options: {\n    compareTime?: Date;\n    includeTense?: boolean;\n  } = {}\n): string {\n  const compareTime = options.compareTime || new Date();\n  let delta = (compareTime.getTime() - dateObj.getTime()) / 1000;\n  const tense = delta >= 0 ? \"past\" : \"future\";\n  delta = Math.abs(delta);\n\n  let timeDesc;\n\n  for (let i = 0; i < tests.length; i++) {\n    if (delta < tests[i]) {\n      delta = Math.floor(delta);\n      timeDesc = localize(\n        `ui.components.relative_time.duration.${langKey[i]}`,\n        \"count\",\n        delta\n      );\n      break;\n    }\n\n    delta /= tests[i];\n  }\n\n  if (timeDesc === undefined) {\n    delta = Math.floor(delta);\n    timeDesc = localize(\n      \"ui.components.relative_time.duration.week\",\n      \"count\",\n      delta\n    );\n  }\n\n  return options.includeTense === false\n    ? timeDesc\n    : localize(`ui.components.relative_time.${tense}`, \"time\", timeDesc);\n}\n","const leftPad = (num: number) => (num < 10 ? `0${num}` : num);\n\nexport function secondsToDuration(d: number) {\n  const h = Math.floor(d / 3600);\n  const m = Math.floor((d % 3600) / 60);\n  const s = Math.floor((d % 3600) % 60);\n\n  if (h > 0) {\n    return `${h}:${leftPad(m)}:${leftPad(s)}`;\n  }\n  if (m > 0) {\n    return `${m}:${leftPad(s)}`;\n  }\n  if (s > 0) {\n    return \"\" + s;\n  }\n  return null;\n}\n","export function computeDomain(entityId: string): string {\n  return entityId.substr(0, entityId.indexOf(\".\"));\n}\n","import { HomeAssistant } from \"./types\";\n\nexport function computeRTL(hass: HomeAssistant) {\n  const lang = hass.language || \"en\";\n  if (hass.translationMetadata.translations[lang]) {\n    return hass.translationMetadata.translations[lang].isRTL || false;\n  }\n  return false;\n}\n\nexport function computeRTLDirection(hass: HomeAssistant) {\n  return computeRTL(hass) ? \"rtl\" : \"ltr\";\n}\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport { computeDomain } from \"./compute-domain\";\n\nexport function computeStateDomain(stateObj: HassEntity) {\n  return computeDomain(stateObj.entity_id);\n}\n","/** Constants to be used in the frontend. */\n\n// Constants should be alphabetically sorted by name.\n// Arrays with values should be alphabetically sorted if order doesn't matter.\n// Each constant should have a description what it is supposed to be used for.\n\n/** Icon to use when no icon specified for domain. */\nexport const DEFAULT_DOMAIN_ICON = \"hass:bookmark\";\n\n/** Panel to show when no panel is picked. */\nexport const DEFAULT_PANEL = \"lovelace\";\n\n/** Domains that have a state card. */\nexport const DOMAINS_WITH_CARD = [\n  \"climate\",\n  \"cover\",\n  \"configurator\",\n  \"input_select\",\n  \"input_number\",\n  \"input_text\",\n  \"lock\",\n  \"media_player\",\n  \"scene\",\n  \"script\",\n  \"timer\",\n  \"vacuum\",\n  \"water_heater\",\n  \"weblink\"\n];\n\n/** Domains with separate more info dialog. */\nexport const DOMAINS_WITH_MORE_INFO = [\n  \"alarm_control_panel\",\n  \"automation\",\n  \"camera\",\n  \"climate\",\n  \"configurator\",\n  \"cover\",\n  \"fan\",\n  \"group\",\n  \"history_graph\",\n  \"input_datetime\",\n  \"light\",\n  \"lock\",\n  \"media_player\",\n  \"script\",\n  \"sun\",\n  \"updater\",\n  \"vacuum\",\n  \"water_heater\",\n  \"weather\"\n];\n\n/** Domains that show no more info dialog. */\nexport const DOMAINS_HIDE_MORE_INFO = [\n  \"input_number\",\n  \"input_select\",\n  \"input_text\",\n  \"scene\",\n  \"weblink\"\n];\n\n/** Domains that should have the history hidden in the more info dialog. */\nexport const DOMAINS_MORE_INFO_NO_HISTORY = [\n  \"camera\",\n  \"configurator\",\n  \"history_graph\",\n  \"scene\"\n];\n\n/** States that we consider \"off\". */\nexport const STATES_OFF = [\"closed\", \"locked\", \"off\"];\n\n/** Domains where we allow toggle in Lovelace. */\nexport const DOMAINS_TOGGLE = new Set([\n  \"fan\",\n  \"input_boolean\",\n  \"light\",\n  \"switch\",\n  \"group\",\n  \"automation\"\n]);\n\n/** Temperature units. */\nexport const UNIT_C = \"°C\";\nexport const UNIT_F = \"°F\";\n\n/** Entity ID of the default view. */\nexport const DEFAULT_VIEW_ENTITY_ID = \"group.default_view\";\n","// Polymer legacy event helpers used courtesy of the Polymer project.\n//\n// Copyright (c) 2017 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//    * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//    * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//    * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\ndeclare global {\n  // tslint:disable-next-line\n  interface HASSDomEvents {}\n}\n\nexport type ValidHassDomEvent = keyof HASSDomEvents;\n\nexport interface HASSDomEvent<T> extends Event {\n  detail: T;\n}\n\n/**\n * Dispatches a custom event with an optional detail value.\n *\n * @param {string} type Name of event type.\n * @param {*=} detail Detail value containing event-specific\n *   payload.\n * @param {{ bubbles: (boolean|undefined),\n *           cancelable: (boolean|undefined),\n *           composed: (boolean|undefined) }=}\n *  options Object specifying options.  These may include:\n *  `bubbles` (boolean, defaults to `true`),\n *  `cancelable` (boolean, defaults to false), and\n *  `node` on which to fire the event (HTMLElement, defaults to `this`).\n * @return {Event} The new event that was fired.\n */\nexport const fireEvent = <HassEvent extends ValidHassDomEvent>(\n  node: HTMLElement | Window,\n  type: HassEvent,\n  detail?: HASSDomEvents[HassEvent],\n  options?: {\n    bubbles?: boolean;\n    cancelable?: boolean;\n    composed?: boolean;\n  }\n) => {\n  options = options || {};\n  // @ts-ignore\n  detail = detail === null || detail === undefined ? {} : detail;\n  const event = new Event(type, {\n    bubbles: options.bubbles === undefined ? true : options.bubbles,\n    cancelable: Boolean(options.cancelable),\n    composed: options.composed === undefined ? true : options.composed\n  });\n  (event as any).detail = detail;\n  node.dispatchEvent(event);\n  return event;\n};\n","/**\n * Return the icon to be used for a domain.\n *\n * Optionally pass in a state to influence the domain icon.\n */\nimport { DEFAULT_DOMAIN_ICON } from \"./const\";\n\nexport const fixedIcons = {\n  alert: \"hass:alert\",\n  automation: \"hass:playlist-play\",\n  calendar: \"hass:calendar\",\n  camera: \"hass:video\",\n  climate: \"hass:thermostat\",\n  configurator: \"hass:settings\",\n  conversation: \"hass:text-to-speech\",\n  device_tracker: \"hass:account\",\n  fan: \"hass:fan\",\n  group: \"hass:google-circles-communities\",\n  history_graph: \"hass:chart-line\",\n  homeassistant: \"hass:home-assistant\",\n  homekit: \"hass:home-automation\",\n  image_processing: \"hass:image-filter-frames\",\n  input_boolean: \"hass:drawing\",\n  input_datetime: \"hass:calendar-clock\",\n  input_number: \"hass:ray-vertex\",\n  input_select: \"hass:format-list-bulleted\",\n  input_text: \"hass:textbox\",\n  light: \"hass:lightbulb\",\n  mailbox: \"hass:mailbox\",\n  notify: \"hass:comment-alert\",\n  person: \"hass:account\",\n  plant: \"hass:flower\",\n  proximity: \"hass:apple-safari\",\n  remote: \"hass:remote\",\n  scene: \"hass:google-pages\",\n  script: \"hass:file-document\",\n  sensor: \"hass:eye\",\n  simple_alarm: \"hass:bell\",\n  sun: \"hass:white-balance-sunny\",\n  switch: \"hass:flash\",\n  timer: \"hass:timer\",\n  updater: \"hass:cloud-upload\",\n  vacuum: \"hass:robot-vacuum\",\n  water_heater: \"hass:thermometer\",\n  weblink: \"hass:open-in-new\"\n};\n\nexport function domainIcon(domain: string, state?: string): string {\n  if (domain in fixedIcons) {\n    return fixedIcons[domain];\n  }\n\n  switch (domain) {\n    case \"alarm_control_panel\":\n      switch (state) {\n        case \"armed_home\":\n          return \"hass:bell-plus\";\n        case \"armed_night\":\n          return \"hass:bell-sleep\";\n        case \"disarmed\":\n          return \"hass:bell-outline\";\n        case \"triggered\":\n          return \"hass:bell-ring\";\n        default:\n          return \"hass:bell\";\n      }\n\n    case \"binary_sensor\":\n      return state && state === \"off\"\n        ? \"hass:radiobox-blank\"\n        : \"hass:checkbox-marked-circle\";\n\n    case \"cover\":\n      return state === \"closed\" ? \"hass:window-closed\" : \"hass:window-open\";\n\n    case \"lock\":\n      return state && state === \"unlocked\" ? \"hass:lock-open\" : \"hass:lock\";\n\n    case \"media_player\":\n      return state && state !== \"off\" && state !== \"idle\"\n        ? \"hass:cast-connected\"\n        : \"hass:cast\";\n\n    case \"zwave\":\n      switch (state) {\n        case \"dead\":\n          return \"hass:emoticon-dead\";\n        case \"sleeping\":\n          return \"hass:sleep\";\n        case \"initializing\":\n          return \"hass:timer-sand\";\n        default:\n          return \"hass:z-wave\";\n      }\n\n    default:\n      // tslint:disable-next-line\n      console.warn(\n        \"Unable to find icon for domain \" + domain + \" (\" + state + \")\"\n      );\n      return DEFAULT_DOMAIN_ICON;\n  }\n}\n","import { fireEvent } from \"./fire-event\";\n\n/**\n * Utility function that enables haptic feedback\n */\n\n// Allowed types are from iOS HIG.\n// https://developer.apple.com/design/human-interface-guidelines/ios/user-interaction/feedback/#haptics\n// Implementors on platforms other than iOS should attempt to match the patterns (shown in HIG) as closely as possible.\nexport type HapticType =\n  | \"success\"\n  | \"warning\"\n  | \"failure\"\n  | \"light\"\n  | \"medium\"\n  | \"heavy\"\n  | \"selection\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    haptic: HapticType;\n  }\n}\n\nexport const forwardHaptic = (el: HTMLElement, hapticType: HapticType) => {\n  fireEvent(el, \"haptic\", hapticType);\n};\n","import { fireEvent } from \"./fire-event\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"location-changed\": {\n      replace: boolean;\n    };\n  }\n}\n\nexport const navigate = (\n  _node: any,\n  path: string,\n  replace: boolean = false\n) => {\n  if (replace) {\n    history.replaceState(null, \"\", path);\n  } else {\n    history.pushState(null, \"\", path);\n  }\n  fireEvent(window, \"location-changed\", {\n    replace\n  });\n};\n","import { HomeAssistant } from \"./types\";\nimport { computeDomain } from \"./compute-domain\";\n\nexport const turnOnOffEntity = (\n  hass: HomeAssistant,\n  entityId: string,\n  turnOn = true\n): Promise<void> => {\n  const stateDomain = computeDomain(entityId);\n  const serviceDomain = stateDomain === \"group\" ? \"homeassistant\" : stateDomain;\n\n  let service;\n  switch (stateDomain) {\n    case \"lock\":\n      service = turnOn ? \"unlock\" : \"lock\";\n      break;\n    case \"cover\":\n      service = turnOn ? \"open_cover\" : \"close_cover\";\n      break;\n    default:\n      service = turnOn ? \"turn_on\" : \"turn_off\";\n  }\n\n  return hass.callService(serviceDomain, service, { entity_id: entityId });\n};\n","import { STATES_OFF } from \"./const\";\nimport { turnOnOffEntity } from \"./turn-on-off-entity\";\nimport { HomeAssistant } from \"./types\";\n\nexport const toggleEntity = (\n  hass: HomeAssistant,\n  entityId: string\n): Promise<void> => {\n  const turnOn = STATES_OFF.includes(hass.states[entityId].state);\n  return turnOnOffEntity(hass, entityId, turnOn);\n};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive so that lit-html will call the function\n * during template rendering, rather than passing as a value.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object\n *\n * @example\n *\n * ```\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n * ```\n */\n// tslint:disable-next-line:no-any\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        let index = -1;\n        let partIndex = 0;\n        const nodesToRemove = [];\n        const _prepareTemplate = (template) => {\n            const content = template.content;\n            // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be\n            // null\n            const walker = document.createTreeWalker(content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n            // Keeps track of the last index associated with a part. We try to delete\n            // unnecessary nodes, but we never want to associate two different parts\n            // to the same index. They must have a constant node between.\n            let lastPartIndex = 0;\n            while (walker.nextNode()) {\n                index++;\n                const node = walker.currentNode;\n                if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                    if (node.hasAttributes()) {\n                        const attributes = node.attributes;\n                        // Per\n                        // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                        // attributes are not guaranteed to be returned in document order.\n                        // In particular, Edge/IE can return them out of order, so we cannot\n                        // assume a correspondance between part index and attribute index.\n                        let count = 0;\n                        for (let i = 0; i < attributes.length; i++) {\n                            if (attributes[i].value.indexOf(marker) >= 0) {\n                                count++;\n                            }\n                        }\n                        while (count-- > 0) {\n                            // Get the template literal section leading up to the first\n                            // expression in this attribute\n                            const stringForPart = result.strings[partIndex];\n                            // Find the attribute name\n                            const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                            // Find the corresponding attribute\n                            // All bound attributes have had a suffix added in\n                            // TemplateResult#getHTML to opt out of special attribute\n                            // handling. To look up the attribute value we also need to add\n                            // the suffix.\n                            const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                            const attributeValue = node.getAttribute(attributeLookupName);\n                            const strings = attributeValue.split(markerRegex);\n                            this.parts.push({ type: 'attribute', index, name, strings });\n                            node.removeAttribute(attributeLookupName);\n                            partIndex += strings.length - 1;\n                        }\n                    }\n                    if (node.tagName === 'TEMPLATE') {\n                        _prepareTemplate(node);\n                    }\n                }\n                else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                    const data = node.data;\n                    if (data.indexOf(marker) >= 0) {\n                        const parent = node.parentNode;\n                        const strings = data.split(markerRegex);\n                        const lastIndex = strings.length - 1;\n                        // Generate a new text node for each literal section\n                        // These nodes are also used as the markers for node parts\n                        for (let i = 0; i < lastIndex; i++) {\n                            parent.insertBefore((strings[i] === '') ? createMarker() :\n                                document.createTextNode(strings[i]), node);\n                            this.parts.push({ type: 'node', index: ++index });\n                        }\n                        // If there's no text, we must insert a comment to mark our place.\n                        // Else, we can trust it will stick around after cloning.\n                        if (strings[lastIndex] === '') {\n                            parent.insertBefore(createMarker(), node);\n                            nodesToRemove.push(node);\n                        }\n                        else {\n                            node.data = strings[lastIndex];\n                        }\n                        // We have a part for each match found\n                        partIndex += lastIndex;\n                    }\n                }\n                else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                    if (node.data === marker) {\n                        const parent = node.parentNode;\n                        // Add a new marker node to be the startNode of the Part if any of\n                        // the following are true:\n                        //  * We don't have a previousSibling\n                        //  * The previousSibling is already the start of a previous part\n                        if (node.previousSibling === null || index === lastPartIndex) {\n                            index++;\n                            parent.insertBefore(createMarker(), node);\n                        }\n                        lastPartIndex = index;\n                        this.parts.push({ type: 'node', index });\n                        // If we don't have a nextSibling, keep this node so we have an end.\n                        // Else, we can remove it to save future costs.\n                        if (node.nextSibling === null) {\n                            node.data = '';\n                        }\n                        else {\n                            nodesToRemove.push(node);\n                            index--;\n                        }\n                        partIndex++;\n                    }\n                    else {\n                        let i = -1;\n                        while ((i = node.data.indexOf(marker, i + 1)) !==\n                            -1) {\n                            // Comment node has a binding marker inside, make an inactive part\n                            // The binding won't work, but subsequent bindings will\n                            // TODO (justinfagnani): consider whether it's even worth it to\n                            // make bindings in comments work\n                            this.parts.push({ type: 'node', index: -1 });\n                        }\n                    }\n                }\n            }\n        };\n        _prepareTemplate(element);\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#attributes-0\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-character\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \\x09\\x0a\\x0c\\x0d\"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\n/**\n * Sets attribute values for AttributeParts, so that the value is only set once\n * even if there are multiple parts for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (v != null &&\n                    (Array.isArray(v) ||\n                        // tslint:disable-next-line:no-any\n                        typeof v !== 'string' && v[Symbol.iterator])) {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n                else {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\nexport class AttributePart {\n    constructor(comitter) {\n        this.value = undefined;\n        this.committer = comitter;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this._pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Inserts this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part between `ref` and `ref`'s next sibling. Both `ref` and\n     * its next sibling must be static, unchanging nodes such as those that appear\n     * in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part._insert(this.startNode = createMarker());\n        part._insert(this.endNode = createMarker());\n    }\n    /**\n     * Appends this part after `ref`\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref._insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this._pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this._pendingValue)) {\n            const directive = this._pendingValue;\n            this._pendingValue = noChange;\n            directive(this);\n        }\n        const value = this._pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this._commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this._commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this._commitNode(value);\n        }\n        else if (Array.isArray(value) ||\n            // tslint:disable-next-line:no-any\n            value[Symbol.iterator]) {\n            this._commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this._commitText(value);\n        }\n    }\n    _insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    _commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this._insert(value);\n        this.value = value;\n    }\n    _commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = value;\n        }\n        else {\n            this._commitNode(document.createTextNode(typeof value === 'string' ? value : String(value)));\n        }\n        this.value = value;\n    }\n    _commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this._commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    _commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this._pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this._pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this._pendingValue)) {\n            const directive = this._pendingValue;\n            this._pendingValue = noChange;\n            directive(this);\n        }\n        if (this._pendingValue === noChange) {\n            return;\n        }\n        const value = !!this._pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n        }\n        this.value = value;\n        this._pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // tslint:disable-next-line:no-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\ntry {\n    const options = {\n        get capture() {\n            eventOptionsSupported = true;\n            return false;\n        }\n    };\n    // tslint:disable-next-line:no-any\n    window.addEventListener('test', options, options);\n    // tslint:disable-next-line:no-any\n    window.removeEventListener('test', options, options);\n}\ncatch (_e) {\n}\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this._pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this._boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this._pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this._pendingValue)) {\n            const directive = this._pendingValue;\n            this._pendingValue = noChange;\n            directive(this);\n        }\n        if (this._pendingValue === noChange) {\n            return;\n        }\n        const newListener = this._pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this._boundHandleEvent, this._options);\n        }\n        if (shouldAddListener) {\n            this._options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this._boundHandleEvent, this._options);\n        }\n        this.value = newListener;\n        this._pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.0.0');\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","import { directive, PropertyPart } from \"lit-html\";\n// See https://github.com/home-assistant/home-assistant-polymer/pull/2457\n// on how to undo mwc -> paper migration\n// import \"@material/mwc-ripple\";\n// import \"@polymer/paper-ripple\";\n\nconst isTouch =\n  \"ontouchstart\" in window ||\n  navigator.maxTouchPoints > 0 ||\n  navigator.msMaxTouchPoints > 0;\n\ninterface LongPressInterface extends HTMLElement {\n  holdTime: number;\n  bind(element: Element): void;\n}\ninterface LongPressElement extends Element {\n  longPress?: boolean;\n}\n\nclass LongPress extends HTMLElement implements LongPressInterface {\n  public holdTime: number;\n  protected ripple: any;\n  protected timer: number | undefined;\n  protected held: boolean;\n  protected cooldownStart: boolean;\n  protected cooldownEnd: boolean;\n\n  constructor() {\n    super();\n    this.holdTime = 500;\n    this.ripple = document.createElement(\"paper-ripple\");\n    this.timer = undefined;\n    this.held = false;\n    this.cooldownStart = false;\n    this.cooldownEnd = false;\n  }\n\n  public connectedCallback() {\n    Object.assign(this.style, {\n      borderRadius: \"50%\", // paper-ripple\n      position: \"absolute\",\n      width: isTouch ? \"100px\" : \"50px\",\n      height: isTouch ? \"100px\" : \"50px\",\n      transform: \"translate(-50%, -50%)\",\n      pointerEvents: \"none\",\n    });\n\n    this.appendChild(this.ripple);\n    this.ripple.style.color = \"#03a9f4\"; // paper-ripple\n    this.ripple.style.color = \"var(--primary-color)\"; // paper-ripple\n    // this.ripple.primary = true;\n\n    [\n      \"touchcancel\",\n      \"mouseout\",\n      \"mouseup\",\n      \"touchmove\",\n      \"mousewheel\",\n      \"wheel\",\n      \"scroll\",\n    ].forEach((ev) => {\n      document.addEventListener(\n        ev,\n        () => {\n          clearTimeout(this.timer);\n          this.stopAnimation();\n          this.timer = undefined;\n        },\n        { passive: true }\n      );\n    });\n  }\n\n  public bind(element: LongPressElement) {\n    if (element.longPress) {\n      return;\n    }\n    element.longPress = true;\n\n    element.addEventListener(\"contextmenu\", (ev: Event) => {\n      const e = ev || window.event;\n      if (e.preventDefault) {\n        e.preventDefault();\n      }\n      if (e.stopPropagation) {\n        e.stopPropagation();\n      }\n      e.cancelBubble = true;\n      e.returnValue = false;\n      return false;\n    });\n\n    const clickStart = (ev: Event) => {\n      if (this.cooldownStart) {\n        return;\n      }\n      this.held = false;\n      let x;\n      let y;\n      if ((ev as TouchEvent).touches) {\n        x = (ev as TouchEvent).touches[0].pageX;\n        y = (ev as TouchEvent).touches[0].pageY;\n      } else {\n        x = (ev as MouseEvent).pageX;\n        y = (ev as MouseEvent).pageY;\n      }\n      this.timer = window.setTimeout(() => {\n        this.startAnimation(x, y);\n        this.held = true;\n      }, this.holdTime);\n\n      this.cooldownStart = true;\n      window.setTimeout(() => (this.cooldownStart = false), 100);\n    };\n\n    const clickEnd = (ev: Event) => {\n      if (\n        this.cooldownEnd ||\n        ([\"touchend\", \"touchcancel\"].includes(ev.type) &&\n          this.timer === undefined)\n      ) {\n        return;\n      }\n      clearTimeout(this.timer);\n      this.stopAnimation();\n      this.timer = undefined;\n      if (this.held) {\n        element.dispatchEvent(new Event(\"ha-hold\"));\n      } else {\n        element.dispatchEvent(new Event(\"ha-click\"));\n      }\n      this.cooldownEnd = true;\n      window.setTimeout(() => (this.cooldownEnd = false), 100);\n    };\n\n    element.addEventListener(\"touchstart\", clickStart, { passive: true });\n    element.addEventListener(\"touchend\", clickEnd);\n    element.addEventListener(\"touchcancel\", clickEnd);\n    element.addEventListener(\"mousedown\", clickStart, { passive: true });\n    element.addEventListener(\"click\", clickEnd);\n  }\n\n  private startAnimation(x: number, y: number) {\n    Object.assign(this.style, {\n      left: `${x}px`,\n      top: `${y}px`,\n      display: null,\n    });\n    this.ripple.holdDown = true; // paper-ripple\n    this.ripple.simulatedRipple(); // paper-ripple\n    // this.ripple.disabled = false;\n    // this.ripple.active = true;\n    // this.ripple.unbounded = true;\n  }\n\n  private stopAnimation() {\n    this.ripple.holdDown = false; // paper-ripple\n    // this.ripple.active = false;\n    // this.ripple.disabled = true;\n    this.style.display = \"none\";\n  }\n}\n\nif (!customElements.get(\"long-press\")) {\n  customElements.define(\"long-press\", LongPress);\n}\n\nconst getLongPress = (): LongPress => {\n  const body = document.body;\n  if (body.querySelector(\"long-press\")) {\n    return body.querySelector(\"long-press\") as LongPress;\n  }\n\n  const longpress = document.createElement(\"long-press\");\n  body.appendChild(longpress);\n\n  return longpress as LongPress;\n};\n\nexport const longPressBind = (element: LongPressElement) => {\n  const longpress: LongPress = getLongPress();\n  if (!longpress) {\n    return;\n  }\n  longpress.bind(element);\n};\n\nexport const longPress = directive(() => (part: PropertyPart) => {\n  longPressBind(part.committer.element);\n});","import { HassEntity } from \"home-assistant-js-websocket\";\nimport { durationToSeconds } from \"../datetime/duration_to_seconds\";\n\nexport function timerTimeRemaining(stateObj: HassEntity) {\n  let timeRemaining = durationToSeconds(stateObj.attributes.remaining);\n\n  if (stateObj.state === \"active\") {\n    const now = new Date().getTime();\n    const madeActive = new Date(stateObj.last_changed).getTime();\n    timeRemaining = Math.max(timeRemaining - (now - madeActive) / 1000, 0);\n  }\n\n  return timeRemaining;\n}\n","/**\n * Apply a theme to an element by setting the CSS variables on it.\n *\n * element: Element to apply theme on.\n * themes: HASS Theme information\n * localTheme: selected theme.\n * updateMeta: boolean if we should update the theme-color meta element.\n */\nexport const applyThemesOnElement = (\n  element,\n  themes,\n  localTheme,\n  updateMeta = false\n) => {\n  if (!element._themes) {\n    element._themes = {};\n  }\n  let themeName = themes.default_theme;\n  if (localTheme === \"default\" || (localTheme && themes.themes[localTheme])) {\n    themeName = localTheme;\n  }\n  const styles = { ...element._themes };\n  if (themeName !== \"default\") {\n    const theme = themes.themes[themeName];\n    Object.keys(theme).forEach((key) => {\n      const prefixedKey = \"--\" + key;\n      element._themes[prefixedKey] = \"\";\n      styles[prefixedKey] = theme[key];\n    });\n  }\n  if (element.updateStyles) {\n    element.updateStyles(styles);\n  } else if ((window as any).ShadyCSS) {\n    // implement updateStyles() method of Polemer elements\n    (window as any).ShadyCSS.styleSubtree(/** @type {!HTMLElement} */ (element), styles);\n  }\n\n  if (!updateMeta) {\n    return;\n  }\n\n  const meta = document.querySelector(\"meta[name=theme-color]\");\n  if (meta) {\n    if (!meta.hasAttribute(\"default-content\")) {\n      meta.setAttribute(\"default-content\", meta.getAttribute(\"content\")!);\n    }\n    const themeColor =\n      styles[\"--primary-color\"] || meta.getAttribute(\"default-content\");\n    meta.setAttribute(\"content\", themeColor);\n  }\n}\n","export function computeEntity(entityId: string): string {\n  return entityId.substr(entityId.indexOf(\".\") + 1);\n}\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport { formatDateTime } from \"./datetime/format_date_time\";\nimport { formatDate } from \"./datetime/format_date\";\nimport { formatTime } from \"./datetime/format_time\";\nimport { LocalizeFunc } from \"./translations/localize\";\nimport { computeStateDomain } from \"./compute-state-domain\";\n\nexport function computeStateDisplay(\n  localize: LocalizeFunc,\n  stateObj: HassEntity,\n  language: string\n): string {\n  let display: string | undefined;\n  const domain = computeStateDomain(stateObj);\n\n  if (domain === \"binary_sensor\") {\n    // Try device class translation, then default binary sensor translation\n    if (stateObj.attributes.device_class) {\n      display = localize(\n        `state.${domain}.${stateObj.attributes.device_class}.${stateObj.state}`\n      );\n    }\n\n    if (!display) {\n      display = localize(`state.${domain}.default.${stateObj.state}`);\n    }\n  } else if (\n    stateObj.attributes.unit_of_measurement &&\n    ![\"unknown\", \"unavailable\"].includes(stateObj.state)\n  ) {\n    display = stateObj.state + \" \" + stateObj.attributes.unit_of_measurement;\n  } else if (domain === \"input_datetime\") {\n    let date: Date;\n    if (!stateObj.attributes.has_time) {\n      date = new Date(\n        stateObj.attributes.year,\n        stateObj.attributes.month - 1,\n        stateObj.attributes.day\n      );\n      display = formatDate(date, language);\n    } else if (!stateObj.attributes.has_date) {\n      const now = new Date();\n      date = new Date(\n        // Due to bugs.chromium.org/p/chromium/issues/detail?id=797548\n        // don't use artificial 1970 year.\n        now.getFullYear(),\n        now.getMonth(),\n        now.getDay(),\n        stateObj.attributes.hour,\n        stateObj.attributes.minute\n      );\n      display = formatTime(date, language);\n    } else {\n      date = new Date(\n        stateObj.attributes.year,\n        stateObj.attributes.month - 1,\n        stateObj.attributes.day,\n        stateObj.attributes.hour,\n        stateObj.attributes.minute\n      );\n      display = formatDateTime(date, language);\n    }\n  } else if (domain === \"zwave\") {\n    if ([\"initializing\", \"dead\"].includes(stateObj.state)) {\n      display = localize(\n        `state.zwave.query_stage.${stateObj.state}`,\n        \"query_stage\",\n        stateObj.attributes.query_stage\n      );\n    } else {\n      display = localize(`state.zwave.default.${stateObj.state}`);\n    }\n  } else {\n    display = localize(`state.${domain}.${stateObj.state}`);\n  }\n\n  // Fall back to default, component backend translation, or raw state if nothing else matches.\n  if (!display) {\n    display =\n      localize(`state.default.${stateObj.state}`) ||\n      localize(`component.${domain}.state.${stateObj.state}`) ||\n      stateObj.state;\n  }\n\n  return display;\n}\n","import { fireEvent } from \"./fire-event\";\n\nexport const createThing = cardConfig => {\n  const _createError = (error, config) => {\n    return _createThing(\"hui-error-card\", {\n      type: \"error\",\n      error,\n      config\n    });\n  };\n\n  const _createThing = (tag, config) => {\n    const element = window.document.createElement(tag);\n    try {\n      element.setConfig(config);\n    } catch (err) {\n      console.error(tag, err);\n      return _createError(err.message, config);\n    }\n    return element;\n  };\n\n  if (\n    !cardConfig ||\n    typeof cardConfig !== \"object\" ||\n    !cardConfig.type ||\n    !cardConfig.type.startsWith(\"custom:\")\n  )\n    return _createError(\"No type configured\", cardConfig);\n\n  const tag = cardConfig.type.substr(\"custom:\".length);\n\n  if (customElements.get(tag)) return _createThing(tag, cardConfig);\n\n  // If element doesn't exist (yet) create an error\n  const element = _createError(\n    `Custom element doesn't exist: ${cardConfig.type}.`,\n    cardConfig\n  );\n  element.style.display = \"None\";\n  const timer = setTimeout(() => {\n    element.style.display = \"\";\n  }, 2000);\n  // Remove error if element is defined later\n  customElements.whenDefined(cardConfig.type).then(() => {\n    clearTimeout(timer);\n    fireEvent(element, \"ll-rebuild\", {}, element);\n  });\n\n  return element;\n};\n","import { HomeAssistant, ActionConfig } from \"./types\";\nimport { fireEvent } from \"./fire-event\";\nimport { forwardHaptic } from \"./haptic\";\nimport { navigate } from \"./navigate\";\nimport { toggleEntity } from \"./toggle-entity\";\n\nexport const handleClick = (\n  node: HTMLElement,\n  hass: HomeAssistant,\n  config: {\n    entity?: string;\n    camera_image?: string;\n    hold_action?: ActionConfig;\n    tap_action?: ActionConfig;\n    dbltap_action?: ActionConfig;\n  },\n  hold: boolean,\n  dblClick: boolean\n): void => {\n  let actionConfig: ActionConfig | undefined;\n\n  if (dblClick && config.dbltap_action) {\n    actionConfig = config.dbltap_action;\n  } else if (hold && config.hold_action) {\n    actionConfig = config.hold_action;\n  } else if (!hold && config.tap_action) {\n    actionConfig = config.tap_action;\n  }\n\n  if (!actionConfig) {\n    actionConfig = {\n      action: \"more-info\"\n    };\n  }\n\n  switch (actionConfig.action) {\n    case \"more-info\":\n      if (config.entity || config.camera_image) {\n        fireEvent(node, \"hass-more-info\", {\n          entityId: actionConfig.entity\n            ? actionConfig.entity\n            : config.entity\n            ? config.entity\n            : config.camera_image\n        });\n        if (actionConfig.haptic) forwardHaptic(node, actionConfig.haptic);\n      }\n      break;\n    case \"navigate\":\n      if (actionConfig.navigation_path) {\n        navigate(node, actionConfig.navigation_path);\n        if (actionConfig.haptic) forwardHaptic(node, actionConfig.haptic);\n      }\n      break;\n    case \"url\":\n      actionConfig.url && window.open(actionConfig.url);\n      if (actionConfig.haptic) forwardHaptic(node, actionConfig.haptic);\n      break;\n    case \"toggle\":\n      if (config.entity) {\n        toggleEntity(hass, config.entity!);\n        if (actionConfig.haptic) forwardHaptic(node, actionConfig.haptic);\n      }\n      break;\n    case \"call-service\": {\n      if (!actionConfig.service) {\n        return;\n      }\n      const [domain, service] = actionConfig.service.split(\".\", 2);\n      hass.callService(domain, service, actionConfig.service_data);\n      if (actionConfig.haptic) forwardHaptic(node, actionConfig.haptic);\n    }\n  }\n};\n","import { PropertyValues } from \"lit-element\";\n\nimport { HomeAssistant } from \"./types\";\n\n// Check if config or Entity changed\nexport function hasConfigOrEntityChanged(\n  element: any,\n  changedProps: PropertyValues,\n  forceUpdate: Boolean,\n): boolean {\n  if (changedProps.has('config') || forceUpdate) {\n    return true;\n  }\n\n  if (element.config!.entity) {\n    const oldHass = changedProps.get('hass') as HomeAssistant | undefined;\n    if (oldHass) {\n      return (\n        oldHass.states[element.config!.entity]\n        !== element.hass!.states[element.config!.entity]\n      );\n    }\n    return true;\n  } else {\n    return false;\n  }\n}","import { HomeAssistant } from \"./types\";\nimport { STATES_OFF } from \"./const\";\nimport { computeDomain } from \"./compute-domain\";\n\nexport const turnOnOffEntities = (\n  hass: HomeAssistant,\n  entityIds: string[],\n  turnOn = true\n): void => {\n  const domainsToCall = {};\n  entityIds.forEach((entityId) => {\n    if (STATES_OFF.includes(hass.states[entityId].state) === turnOn) {\n      const stateDomain = computeDomain(entityId);\n      const serviceDomain = [\"cover\", \"lock\"].includes(stateDomain)\n        ? stateDomain\n        : \"homeassistant\";\n\n      if (!(serviceDomain in domainsToCall)) {\n        domainsToCall[serviceDomain] = [];\n      }\n      domainsToCall[serviceDomain].push(entityId);\n    }\n  });\n\n  Object.keys(domainsToCall).forEach((domain) => {\n    let service;\n    switch (domain) {\n      case \"lock\":\n        service = turnOn ? \"unlock\" : \"lock\";\n        break;\n      case \"cover\":\n        service = turnOn ? \"open_cover\" : \"close_cover\";\n        break;\n      default:\n        service = turnOn ? \"turn_on\" : \"turn_off\";\n    }\n\n    const entities = domainsToCall[domain];\n    hass.callService(domain, service, { entity_id: entities });\n  });\n};\n"],"names":["durationToSeconds","duration","parts","split","map","Number","formatDate","Date","toLocaleDateString","e","name","toLocaleDateStringSupportsOptions","dateObj","locales","year","month","day","fecha","format","formatDateTime","toLocaleString","toLocaleStringSupportsOptions","hour","minute","formatTime","toLocaleTimeString","toLocaleTimeStringSupportsOptions","tests","langKey","leftPad","num","computeDomain","entityId","substr","indexOf","computeRTL","hass","lang","language","translationMetadata","translations","isRTL","computeStateDomain","stateObj","entity_id","STATES_OFF","DOMAINS_TOGGLE","Set","fireEvent","node","type","detail","options","event","Event","bubbles","undefined","cancelable","Boolean","composed","dispatchEvent","fixedIcons","alert","automation","calendar","camera","climate","configurator","conversation","device_tracker","fan","group","history_graph","homeassistant","homekit","image_processing","input_boolean","input_datetime","input_number","input_select","input_text","light","mailbox","notify","person","plant","proximity","remote","scene","script","sensor","simple_alarm","sun","switch","timer","updater","vacuum","water_heater","weblink","forwardHaptic","el","hapticType","navigate","_node","path","replace","history","replaceState","pushState","window","turnOnOffEntity","turnOn","service","stateDomain","serviceDomain","callService","toggleEntity","includes","states","state","directives","WeakMap","String","Math","random","slice","capture","addEventListener","removeEventListener","_e","push","const","isTouch","navigator","maxTouchPoints","msMaxTouchPoints","LongPress","constructor","holdTime","ripple","document","createElement","held","cooldownStart","cooldownEnd","connectedCallback","Object","assign","this","style","borderRadius","position","width","height","transform","pointerEvents","appendChild","color","forEach","ev","clearTimeout","stopAnimation","passive","bind","element","longPress","preventDefault","stopPropagation","cancelBubble","returnValue","clickStart","x","y","touches","pageX","pageY","setTimeout","startAnimation","clickEnd","left","top","display","holdDown","simulatedRipple","HTMLElement","customElements","get","define","longPressBind","longpress","body","querySelector","getLongPress","f","args","d","part","committer","set","directive","localize","timeDesc","delta","compareTime","getTime","tense","abs","let","i","length","floor","includeTense","h","m","s","timeRemaining","attributes","remaining","now","madeActive","last_changed","max","themes","localTheme","updateMeta","_themes","themeName","default_theme","styles","theme","keys","key","prefixedKey","updateStyles","ShadyCSS","styleSubtree","meta","hasAttribute","setAttribute","getAttribute","themeColor","domain","device_class","unit_of_measurement","date","has_time","has_date","getFullYear","getMonth","getDay","query_stage","cardConfig","_createError","error","config","_createThing","tag","setConfig","err","console","message","startsWith","whenDefined","then","warn","hold","dblClick","actionConfig","dbltap_action","hold_action","tap_action","action","entity","camera_image","haptic","navigation_path","url","open","service_data","changedProps","forceUpdate","has","oldHass","entityIds","domainsToCall"],"mappings":"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"}