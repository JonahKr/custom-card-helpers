{"version":3,"file":"index.umd.js","sources":["../src/const.ts","../src/fire-event.ts","../src/navigate.ts","../src/turn-on-off-entity.ts","../src/compute-domain.ts","../src/toggle-entity.ts","../src/haptic.ts","../src/long-press-directive.ts","../src/handle-click.ts"],"sourcesContent":["/** Constants to be used in the frontend. */\n\n// Constants should be alphabetically sorted by name.\n// Arrays with values should be alphabetically sorted if order doesn't matter.\n// Each constant should have a description what it is supposed to be used for.\n\n/** Icon to use when no icon specified for domain. */\nexport const DEFAULT_DOMAIN_ICON = \"hass:bookmark\";\n\n/** Panel to show when no panel is picked. */\nexport const DEFAULT_PANEL = \"lovelace\";\n\n/** Domains that have a state card. */\nexport const DOMAINS_WITH_CARD = [\n  \"climate\",\n  \"cover\",\n  \"configurator\",\n  \"input_select\",\n  \"input_number\",\n  \"input_text\",\n  \"lock\",\n  \"media_player\",\n  \"scene\",\n  \"script\",\n  \"timer\",\n  \"vacuum\",\n  \"water_heater\",\n  \"weblink\"\n];\n\n/** Domains with separate more info dialog. */\nexport const DOMAINS_WITH_MORE_INFO = [\n  \"alarm_control_panel\",\n  \"automation\",\n  \"camera\",\n  \"climate\",\n  \"configurator\",\n  \"cover\",\n  \"fan\",\n  \"group\",\n  \"history_graph\",\n  \"input_datetime\",\n  \"light\",\n  \"lock\",\n  \"media_player\",\n  \"script\",\n  \"sun\",\n  \"updater\",\n  \"vacuum\",\n  \"water_heater\",\n  \"weather\"\n];\n\n/** Domains that show no more info dialog. */\nexport const DOMAINS_HIDE_MORE_INFO = [\n  \"input_number\",\n  \"input_select\",\n  \"input_text\",\n  \"scene\",\n  \"weblink\"\n];\n\n/** Domains that should have the history hidden in the more info dialog. */\nexport const DOMAINS_MORE_INFO_NO_HISTORY = [\n  \"camera\",\n  \"configurator\",\n  \"history_graph\",\n  \"scene\"\n];\n\n/** States that we consider \"off\". */\nexport const STATES_OFF = [\"closed\", \"locked\", \"off\"];\n\n/** Domains where we allow toggle in Lovelace. */\nexport const DOMAINS_TOGGLE = new Set([\n  \"fan\",\n  \"input_boolean\",\n  \"light\",\n  \"switch\",\n  \"group\",\n  \"automation\"\n]);\n\n/** Temperature units. */\nexport const UNIT_C = \"°C\";\nexport const UNIT_F = \"°F\";\n\n/** Entity ID of the default view. */\nexport const DEFAULT_VIEW_ENTITY_ID = \"group.default_view\";\n","// Polymer legacy event helpers used courtesy of the Polymer project.\n//\n// Copyright (c) 2017 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//    * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//    * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//    * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\ndeclare global {\n  // tslint:disable-next-line\n  interface HASSDomEvents {}\n}\n\nexport type ValidHassDomEvent = keyof HASSDomEvents;\n\nexport interface HASSDomEvent<T> extends Event {\n  detail: T;\n}\n\n/**\n * Dispatches a custom event with an optional detail value.\n *\n * @param {string} type Name of event type.\n * @param {*=} detail Detail value containing event-specific\n *   payload.\n * @param {{ bubbles: (boolean|undefined),\n *           cancelable: (boolean|undefined),\n *           composed: (boolean|undefined) }=}\n *  options Object specifying options.  These may include:\n *  `bubbles` (boolean, defaults to `true`),\n *  `cancelable` (boolean, defaults to false), and\n *  `node` on which to fire the event (HTMLElement, defaults to `this`).\n * @return {Event} The new event that was fired.\n */\nexport const fireEvent = <HassEvent extends ValidHassDomEvent>(\n  node: HTMLElement | Window,\n  type: HassEvent,\n  detail?: HASSDomEvents[HassEvent],\n  options?: {\n    bubbles?: boolean;\n    cancelable?: boolean;\n    composed?: boolean;\n  }\n) => {\n  options = options || {};\n  // @ts-ignore\n  detail = detail === null || detail === undefined ? {} : detail;\n  const event = new Event(type, {\n    bubbles: options.bubbles === undefined ? true : options.bubbles,\n    cancelable: Boolean(options.cancelable),\n    composed: options.composed === undefined ? true : options.composed\n  });\n  (event as any).detail = detail;\n  node.dispatchEvent(event);\n  return event;\n};\n","import { fireEvent } from \"./fire-event\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"location-changed\": {\n      replace: boolean;\n    };\n  }\n}\n\nexport const navigate = (\n  _node: any,\n  path: string,\n  replace: boolean = false\n) => {\n  if (replace) {\n    history.replaceState(null, \"\", path);\n  } else {\n    history.pushState(null, \"\", path);\n  }\n  fireEvent(window, \"location-changed\", {\n    replace\n  });\n};\n","import { HomeAssistant } from \"./types\";\nimport computeDomain from \"./compute-domain\";\n\nexport const turnOnOffEntity = (\n  hass: HomeAssistant,\n  entityId: string,\n  turnOn = true\n): Promise<void> => {\n  const stateDomain = computeDomain(entityId);\n  const serviceDomain = stateDomain === \"group\" ? \"homeassistant\" : stateDomain;\n\n  let service;\n  switch (stateDomain) {\n    case \"lock\":\n      service = turnOn ? \"unlock\" : \"lock\";\n      break;\n    case \"cover\":\n      service = turnOn ? \"open_cover\" : \"close_cover\";\n      break;\n    default:\n      service = turnOn ? \"turn_on\" : \"turn_off\";\n  }\n\n  return hass.callService(serviceDomain, service, { entity_id: entityId });\n};\n","export default function computeDomain(entityId: string): string {\n  return entityId.substr(0, entityId.indexOf(\".\"));\n}\n","import { STATES_OFF } from \"./const\";\nimport { turnOnOffEntity } from \"./turn-on-off-entity\";\nimport { HomeAssistant } from \"./types\";\n\nexport const toggleEntity = (\n  hass: HomeAssistant,\n  entityId: string\n): Promise<void> => {\n  const turnOn = STATES_OFF.includes(hass.states[entityId].state);\n  return turnOnOffEntity(hass, entityId, turnOn);\n};\n","import { fireEvent } from \"./fire-event\";\n\n/**\n * Utility function that enables haptic feedback\n */\n\n// Allowed types are from iOS HIG.\n// https://developer.apple.com/design/human-interface-guidelines/ios/user-interaction/feedback/#haptics\n// Implementors on platforms other than iOS should attempt to match the patterns (shown in HIG) as closely as possible.\nexport type HapticType =\n  | \"success\"\n  | \"warning\"\n  | \"failure\"\n  | \"light\"\n  | \"medium\"\n  | \"heavy\"\n  | \"selection\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    haptic: HapticType;\n  }\n}\n\nexport const forwardHaptic = (el: HTMLElement, hapticType: HapticType) => {\n  fireEvent(el, \"haptic\", hapticType);\n};\n","import { directive, PropertyPart } from \"lit-html\";\n// See https://github.com/home-assistant/home-assistant-polymer/pull/2457\n// on how to undo mwc -> paper migration\n// import \"@material/mwc-ripple\";\n// import \"@polymer/paper-ripple\";\n\nconst isTouch =\n  \"ontouchstart\" in window ||\n  navigator.maxTouchPoints > 0 ||\n  navigator.msMaxTouchPoints > 0;\n\ninterface LongPress extends HTMLElement {\n  holdTime: number;\n  bind(element: Element): void;\n}\ninterface LongPressElement extends Element {\n  longPress?: boolean;\n}\n\nclass LongPress extends HTMLElement implements LongPress {\n  public holdTime: number;\n  protected ripple: any;\n  protected timer: number | undefined;\n  protected held: boolean;\n  protected cooldownStart: boolean;\n  protected cooldownEnd: boolean;\n\n  constructor() {\n    super();\n    this.holdTime = 500;\n    this.ripple = document.createElement(\"paper-ripple\");\n    this.timer = undefined;\n    this.held = false;\n    this.cooldownStart = false;\n    this.cooldownEnd = false;\n  }\n\n  public connectedCallback() {\n    Object.assign(this.style, {\n      borderRadius: \"50%\", // paper-ripple\n      position: \"absolute\",\n      width: isTouch ? \"100px\" : \"50px\",\n      height: isTouch ? \"100px\" : \"50px\",\n      transform: \"translate(-50%, -50%)\",\n      pointerEvents: \"none\",\n    });\n\n    this.appendChild(this.ripple);\n    this.ripple.style.color = \"#03a9f4\"; // paper-ripple\n    this.ripple.style.color = \"var(--primary-color)\"; // paper-ripple\n    // this.ripple.primary = true;\n\n    [\n      \"touchcancel\",\n      \"mouseout\",\n      \"mouseup\",\n      \"touchmove\",\n      \"mousewheel\",\n      \"wheel\",\n      \"scroll\",\n    ].forEach((ev) => {\n      document.addEventListener(\n        ev,\n        () => {\n          clearTimeout(this.timer);\n          this.stopAnimation();\n          this.timer = undefined;\n        },\n        { passive: true }\n      );\n    });\n  }\n\n  public bind(element: LongPressElement) {\n    if (element.longPress) {\n      return;\n    }\n    element.longPress = true;\n\n    element.addEventListener(\"contextmenu\", (ev: Event) => {\n      const e = ev || window.event;\n      if (e.preventDefault) {\n        e.preventDefault();\n      }\n      if (e.stopPropagation) {\n        e.stopPropagation();\n      }\n      e.cancelBubble = true;\n      e.returnValue = false;\n      return false;\n    });\n\n    const clickStart = (ev: Event) => {\n      if (this.cooldownStart) {\n        return;\n      }\n      this.held = false;\n      let x;\n      let y;\n      if ((ev as TouchEvent).touches) {\n        x = (ev as TouchEvent).touches[0].pageX;\n        y = (ev as TouchEvent).touches[0].pageY;\n      } else {\n        x = (ev as MouseEvent).pageX;\n        y = (ev as MouseEvent).pageY;\n      }\n      this.timer = window.setTimeout(() => {\n        this.startAnimation(x, y);\n        this.held = true;\n      }, this.holdTime);\n\n      this.cooldownStart = true;\n      window.setTimeout(() => (this.cooldownStart = false), 100);\n    };\n\n    const clickEnd = (ev: Event) => {\n      if (\n        this.cooldownEnd ||\n        ([\"touchend\", \"touchcancel\"].includes(ev.type) &&\n          this.timer === undefined)\n      ) {\n        return;\n      }\n      clearTimeout(this.timer);\n      this.stopAnimation();\n      this.timer = undefined;\n      if (this.held) {\n        element.dispatchEvent(new Event(\"ha-hold\"));\n      } else {\n        element.dispatchEvent(new Event(\"ha-click\"));\n      }\n      this.cooldownEnd = true;\n      window.setTimeout(() => (this.cooldownEnd = false), 100);\n    };\n\n    element.addEventListener(\"touchstart\", clickStart, { passive: true });\n    element.addEventListener(\"touchend\", clickEnd);\n    element.addEventListener(\"touchcancel\", clickEnd);\n    element.addEventListener(\"mousedown\", clickStart, { passive: true });\n    element.addEventListener(\"click\", clickEnd);\n  }\n\n  private startAnimation(x: number, y: number) {\n    Object.assign(this.style, {\n      left: `${x}px`,\n      top: `${y}px`,\n      display: null,\n    });\n    this.ripple.holdDown = true; // paper-ripple\n    this.ripple.simulatedRipple(); // paper-ripple\n    // this.ripple.disabled = false;\n    // this.ripple.active = true;\n    // this.ripple.unbounded = true;\n  }\n\n  private stopAnimation() {\n    this.ripple.holdDown = false; // paper-ripple\n    // this.ripple.active = false;\n    // this.ripple.disabled = true;\n    this.style.display = \"none\";\n  }\n}\n\nif (!customElements.get(\"long-press\")) {\n  customElements.define(\"long-press\", LongPress);\n}\n\nconst getLongPress = (): LongPress => {\n  const body = document.body;\n  if (body.querySelector(\"long-press\")) {\n    return body.querySelector(\"long-press\") as LongPress;\n  }\n\n  const longpress = document.createElement(\"long-press\");\n  body.appendChild(longpress);\n\n  return longpress as LongPress;\n};\n\nexport const longPressBind = (element: LongPressElement) => {\n  const longpress: LongPress = getLongPress();\n  if (!longpress) {\n    return;\n  }\n  longpress.bind(element);\n};\n\nexport const longPress = directive(() => (part: PropertyPart) => {\n  longPressBind(part.committer.element);\n});\n","import { navigate } from \"./navigate\";\nimport { toggleEntity } from \"./toggle-entity\";\nimport { HomeAssistant, ActionConfig } from \"./types\";\nimport { fireEvent } from \"./fire-event\";\nimport { forwardHaptic } from \"./haptic\";\n\nexport const handleClick = (\n  node: HTMLElement,\n  hass: HomeAssistant,\n  config: {\n    entity?: string;\n    camera_image?: string;\n    hold_action?: ActionConfig;\n    tap_action?: ActionConfig;\n  },\n  hold: boolean\n): void => {\n  let actionConfig: ActionConfig | undefined;\n\n  if (hold && config.hold_action) {\n    actionConfig = config.hold_action;\n  } else if (!hold && config.tap_action) {\n    actionConfig = config.tap_action;\n  }\n\n  if (!actionConfig) {\n    actionConfig = {\n      action: \"more-info\"\n    };\n  }\n\n  switch (actionConfig.action) {\n    case \"more-info\":\n      if (config.entity) {\n        fireEvent(node, \"hass-more-info\", {\n          entityId: config.entity\n        });\n        if (actionConfig.haptic) forwardHaptic(node, actionConfig.haptic);\n      }\n      break;\n    case \"navigate\":\n      if (actionConfig.navigation_path) {\n        navigate(node, actionConfig.navigation_path);\n        if (actionConfig.haptic) forwardHaptic(node, actionConfig.haptic);\n      }\n      break;\n    case \"url\":\n      actionConfig.url && window.open(actionConfig.url);\n      if (actionConfig.haptic) forwardHaptic(node, actionConfig.haptic);\n      break;\n    case \"toggle\":\n      if (config.entity) {\n        toggleEntity(hass, config.entity!);\n        if (actionConfig.haptic) forwardHaptic(node, actionConfig.haptic);\n      }\n      break;\n    case \"call-service\": {\n      if (!actionConfig.service) {\n        return;\n      }\n      const [domain, service] = actionConfig.service.split(\".\", 2);\n      hass.callService(domain, service, actionConfig.service_data);\n      if (actionConfig.haptic) forwardHaptic(node, actionConfig.haptic);\n    }\n  }\n};\n"],"names":["STATES_OFF","DOMAINS_TOGGLE","Set","fireEvent","node","type","detail","options","event","Event","bubbles","undefined","cancelable","Boolean","composed","dispatchEvent","navigate","_node","path","replace","history","replaceState","pushState","window","turnOnOffEntity","hass","entityId","turnOn","service","stateDomain","substr","indexOf","computeDomain","serviceDomain","callService","entity_id","toggleEntity","includes","states","state","forwardHaptic","el","hapticType","isTouch","navigator","maxTouchPoints","msMaxTouchPoints","LongPress","constructor","holdTime","ripple","document","createElement","timer","held","cooldownStart","cooldownEnd","connectedCallback","Object","assign","this","style","borderRadius","position","width","height","transform","pointerEvents","appendChild","color","forEach","ev","addEventListener","clearTimeout","stopAnimation","passive","bind","element","longPress","e","preventDefault","stopPropagation","cancelBubble","returnValue","clickStart","x","y","touches","pageX","pageY","setTimeout","startAnimation","clickEnd","left","top","display","holdDown","simulatedRipple","HTMLElement","customElements","get","define","const","longPressBind","longpress","body","querySelector","getLongPress","directive","part","committer","config","hold","actionConfig","hold_action","tap_action","action","entity","haptic","navigation_path","url","open","split","service_data"],"mappings":"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"}